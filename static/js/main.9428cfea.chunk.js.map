{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabetically","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","className","type","cn","this","onClick","goods","visibleGoods","sort","gA","gB","localeCompare","length","console","log","getReorderedGoods","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgBE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,EAoBES,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAvBzB,4CA2BE,WA4BE,OACE,sBAAKQ,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYC,KAAKd,MAAME,WAAaL,EAASS,WAE/CS,QAASD,KAAKV,mBALhB,iCAUA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYC,KAAKd,MAAME,WAAaL,EAASW,SAE/CO,QAASD,KAAKP,aALhB,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAsC,IAA1BC,KAAKd,MAAMC,aAEzBc,QAASD,KAAKL,QALhB,sBAUEK,KAAKd,MAAMC,YAAca,KAAKd,MAAME,WAAaL,EAASM,OAExD,wBACES,KAAK,SACLD,UAAU,4BACVI,QAASD,KAAKJ,MAHhB,sBAWN,6BACE,6BA1EN,SACEM,EADF,GAGG,IADCd,EACF,EADEA,SAAUD,EACZ,EADYA,WAENgB,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQlB,GACN,KAAKL,EAASS,SACZ,OAAOa,EAAGE,cAAcD,GAC1B,KAAKvB,EAASW,OACZ,OAAOW,EAAGG,OAASF,EAAGE,OACxB,QACE,OAAO,MAITrB,GACFgB,EAAaR,UAIfc,QAAQC,IAAItB,EAAUD,GAEfgB,EAmDAQ,CAAkB3B,EAAiBgB,KAAKd,OAAO0B,KAAI,SAAAC,GAClD,OAAO,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAxG7C,GAAyBC,IAAMC,WC/B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9428cfea.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n  type State = {\n    isReversed: boolean,\n    sortType: SortType,\n  };\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    function getReorderedGoods(\n      goods: string[],\n      { sortType, isReversed }: ReorderOptions,\n    ) {\n      const visibleGoods = [...goods];\n\n      visibleGoods.sort((gA, gB) => {\n        switch (sortType) {\n          case SortType.ALPHABET:\n            return gA.localeCompare(gB);\n          case SortType.LENGTH:\n            return gA.length - gB.length;\n          default:\n            return 0;\n        }\n      });\n\n      if (isReversed) {\n        visibleGoods.reverse();\n      }\n\n      // eslint-disable-next-line no-console\n      console.log(sortType, isReversed);\n\n      return visibleGoods;\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn('button is-info', {\n              'is-light': this.state.sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-success', {\n              'is-light': this.state.sortType !== SortType.LENGTH,\n            })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-warning', {\n              'is-light': this.state.isReversed !== true,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(this.state.isReversed || this.state.sortType !== SortType.NONE)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(good => {\n              return <li data-cy=\"Good\" key={good}>{good}</li>;\n            })}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}